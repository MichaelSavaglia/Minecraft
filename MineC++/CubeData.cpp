#include "CubeData.h"


const std::vector<GLfloat> CubeData::mVertices =
{
	-0.5, -0.5, 0.5,		//v0
	0.5, -0.5, 0.5,			//v1
	0.5, 0.5, 0.5,			//v2

	0.5, 0.5, 0.5,			//v2
	-0.5, 0.5, 0.5,			//v3
	-0.5, -0.5, 0.5,		//v0


	0.5, -0.5, 0.5,			//v1
	0.5, -0.5, -0.5,		//v5
	0.5, 0.5, -0.5,			//v6

	0.5, 0.5, -0.5,			//v6
	0.5, 0.5, 0.5,			//v2
	0.5, -0.5, 0.5,			//v1


	-0.5, 0.5, -0.5,		//v7
	0.5, 0.5, -0.5,			//v6
	0.5, -0.5, -0.5,		//v5

	0.5, -0.5, -0.5,		//v5
	-0.5, -0.5, -0.5,		//v4
	-0.5, 0.5, -0.5,		//v7


	-0.5, -0.5, -0.5,		//v4
	-0.5, -0.5, 0.5,		//v0
	-0.5, 0.5, 0.5,			//v3

	-0.5, 0.5, 0.5,			//v3
	-0.5, 0.5, -0.5,		//v7
	-0.5, -0.5, -0.5,		//v4


	-0.5, -0.5, -0.5,		//v4
	0.5, -0.5, -0.5,		//v5
	0.5, -0.5, 0.5,			//v1

	0.5, -0.5, 0.5,			//v1
	-0.5, -0.5, 0.5,		//v0
	-0.5, -0.5, -0.5,		//v4


	-0.5, 0.5, 0.5,			//v3
	0.5, 0.5, 0.5,			//v2
	0.5, 0.5, -0.5,			//v6

	0.5, 0.5, -0.5,			//v6
	-0.5, 0.5, -0.5,		//v7
	-0.5, 0.5, 0.5,			//v3

	/*-0.5, -0.5, 0.5,		//v0
	0.5, -0.5, 0.5,			//v1
	0.5, 0.5, 0.5,			//v2
	-0.5, 0.5, 0.5,			//v3
	-0.5, -0.5, -0.5,		//v4
	0.5, -0.5, -0.5,		//v5
	0.5, 0.5, -0.5,			//v6
	-0.5, 0.5, -0.5,		//v7*/
};

const std::vector<GLfloat> CubeData::mColors =
{
	1.0, 0.0, 0.0,
	0.0, 1.0, 0.0,
	0.0, 0.0, 1.0,
	1.0, 1.0, 1.0,
	1.0, 0.0, 0.0,
	0.0, 1.0, 0.0,
	0.0, 0.0, 1.0,
	1.0, 1.0, 1.0,
};

const std::vector<GLfloat> CubeData::mUVs = 
{
	0.0, 0.0, 
	0.1f, 0.0,
	0.1f, 0.1f,
	0.1f, 0.1f,
	0.0, 0.1f,
	0.0, 0.0,

	0.0, 0.0,
	0.1f, 0.0,
	0.1f, 0.1f,
	0.1f, 0.1f,
	0.0, 0.1f,
	0.0, 0.0,

	0.0, 0.0,
	0.1f, 0.0,
	0.1f, 0.1f,
	0.1f, 0.1f,
	0.0, 0.1f,
	0.0, 0.0,

	0.0, 0.0,
	0.1f, 0.0,
	0.1f, 0.1f,
	0.1f, 0.1f,
	0.0, 0.1f,
	0.0, 0.0,

	0.0, 0.0,
	0.1f, 0.0,
	0.1f, 0.1f,
	0.1f, 0.1f,
	0.0, 0.1f,
	0.0, 0.0,

	0.0, 0.0,
	0.1f, 0.0,
	0.1f, 0.1f,
	0.1f, 0.1f,
	0.0, 0.1f,
	0.0, 0.0,

	//0.0, 0.0,
	//1.0, 0.0,
	//1.0, 1.0,
	//0.0, 1.0,
	//0.0, 0.0,
	//1.0, 0.0,
	//1.0, 1.0,
	//0.0, 1.0,
};

const std::vector<unsigned short> CubeData::mIndices =
{
	0, 1, 2,
	2, 3, 0,
	1, 5, 6,
	6, 2, 1,
	7, 6, 5,
	5, 4, 7,
	4, 0, 3,
	3, 7, 4,
	4, 5, 1,
	1, 0, 4,
	3, 2, 6,
	6, 7, 3,
};